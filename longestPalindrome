#5. Longest Palindromic Substring

##Topics: Dynamic programming, search algorithm

##Hint:
<p>
Given a string s, return the longest 
palindromic
 
substring
 in s.
</p>
 

##Example 1:
<p>
Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
</p>
##Example 2:
<p>
Input: s = "cbbd"
Output: "bb"
 </p>

<code>
function longestPalindrome(s: string) {
    let longest = ''; // stores the longest palindrome

    function isPal (s, left, right) {
        while(left >= 0 && right < s.length && s[left] === s[right]) {
            left--
            right++
        }
        return s.slice(left+1, right)
    }

    //condition to check for odd and even arrangement

    for (let i= 0; i < s.length; i++) {
        let oddPal = isPal(s, i, i);
        let evenPal = isPal(s, i, i+1);

        let longestPal = oddPal.length > evenPal.length ? oddPal: evenPal

        if (longestPal.length > longest.length) {
            // switch values
            longest = longestPal
        }

    }
    return longest
};
</code>

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.

